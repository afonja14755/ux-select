(function(){"use strict";try{if(typeof document<"u"){var e=document.createElement("style");e.appendChild(document.createTextNode(`:root{--uxs-padding-x: 12px;--uxs-padding-y: 6px;--uxs-backgroud-color: rgb(255, 255, 255);--uxs-text-color: rgb(34, 34, 34);--uxs-font-size: 16px;--uxs-line-height: 1.5;--uxs-border-width: 1px;--uxs-border-radius: 6px;--uxs-border-color: rgb(233, 233, 233);--uxs-border-hover-color: rgb(189, 193, 198);--uxs-option-hover-bg-color: rgb(244, 244, 244);--uxs-option-select-bg-color: rgb(233, 233, 233);--uxs-option-disable-color: rgb(130, 130, 130);--uxs-dropdown-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M12,16c-0.3,0-0.5-0.1-0.7-0.3l-6-6c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4 l-6,6C12.5,15.9,12.3,16,12,16z'/%3E%3C/g%3E%3C/svg%3E%0A");--uxs-dropdown-image-disable: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cg%3E%3Cpath fill='rgb(130 130 130)' d='M12,16c-0.3,0-0.5-0.1-0.7-0.3l-6-6c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4 l-6,6C12.5,15.9,12.3,16,12,16z'/%3E%3C/g%3E%3C/svg%3E%0A");--uxs-clear-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M6,19c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l12-12c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-12,12C6.5,18.9,6.3,19,6,19z' /%3E%3Cpath d='M18,19c-0.3,0-0.5-0.1-0.7-0.3l-12-12c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l12,12c0.4,0.4,0.4,1,0,1.4 C18.5,18.9,18.3,19,18,19z'/%3E%3C/g%3E%3C/svg%3E%0A");--uxs-transition-duration: .2s;--uxs-transition-easing: ease-in-out}.ux-select{cursor:pointer;position:relative;display:block;width:100%;margin:0;padding:var(--uxs-padding-y) var(--uxs-padding-x);border:var(--uxs-border-width) solid var(--uxs-border-color);border-radius:var(--uxs-border-radius);background-color:var(--uxs-backgroud-color);font-size:var(--uxs-font-size);line-height:var(--uxs-line-height);color:var(--uxs-text-color);transition:border-color var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select.-disabled{cursor:not-allowed;color:var(--uxs-option-disable-color)}.ux-select.-filled .ux-select__clear{display:block}.ux-select:not(.-disabled).-focus{border-color:var(--uxs-border-hover-color)}.ux-select:not(.-disabled).-shown{border-color:var(--uxs-border-hover-color)}.ux-select:not(.-disabled).-shown .ux-select__head:after{transform:rotate(-180deg)}.ux-select:not(.-disabled).-shown .ux-select__body{pointer-events:auto;opacity:1;transform:scale(1) translateY(0)}.ux-select__head{position:relative;display:flex;align-items:center}.ux-select__head:after{content:"";display:flex;align-items:center;justify-content:center;min-width:16px;width:16px;height:16px;margin-left:8px;background:transparent var(--uxs-dropdown-image) center no-repeat;transition:transform var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select.-disabled .ux-select__head:after{background-image:var(--uxs-dropdown-image-disable)}.ux-select__title{user-select:none;flex-grow:1;white-space:nowrap}.ux-select__clear{cursor:pointer;display:none;min-width:16px;width:16px;height:16px;margin-left:8px;border:none;outline:none;background:transparent var(--uxs-clear-image) center no-repeat}.ux-select__body{pointer-events:none;position:absolute;z-index:5;top:calc(100% + 5px);left:0;width:100%;border:var(--uxs-border-width) solid var(--uxs-border-color);border-radius:var(--uxs-border-radius);background-color:var(--uxs-backgroud-color);opacity:0;transform:scale(.75) translateY(-12px);transition:opacity var(--uxs-transition-duration) var(--uxs-transition-easing),transform var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select__search{padding:4px}.ux-select-search__input{width:100%;padding:var(--uxs-padding-y) calc(var(--uxs-padding-x) - 3px);border:var(--uxs-border-width) solid var(--uxs-border-color);border-radius:var(--uxs-border-radius);transition:border-color var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select-search__input::-ms-clear,.ux-select-search__input::-ms-reveal{display:none;width:0;height:0}.ux-select-search__input::-webkit-search-decoration,.ux-select-search__input::-webkit-search-cancel-button,.ux-select-search__input::-webkit-search-results-button,.ux-select-search__input::-webkit-search-results-decoration{-webkit-appearance:none;appearance:none}.ux-select-search__input:focus-visible{outline:none}.ux-select-search__input:focus{border-color:var(--uxs-border-hover-color)}.ux-select__dropdown{max-height:calc((var(--uxs-font-size) * var(--uxs-line-height) + var(--uxs-padding-y) * 2) * 5);overflow-y:auto}.ux-select-group.-disabled .ux-select-group__title{color:var(--uxs-option-disable-color)}.ux-select-group.-empty .ux-select-group__elem{padding:var(--uxs-padding-y) var(--uxs-padding-x)}.ux-select-group__title{cursor:default;padding:var(--uxs-padding-y) var(--uxs-padding-x);font-weight:700}.ux-select-group__list{margin:0;padding:0;list-style:none}.ux-select-group__elem{user-select:none;padding:var(--uxs-padding-y) var(--uxs-padding-x) var(--uxs-padding-y) calc(var(--uxs-padding-x) * 2);transition:background-color var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select-group__elem.-disabled{cursor:not-allowed;color:var(--uxs-option-disable-color)}.ux-select-group__elem:not(.-disabled):hover{background-color:var(--uxs-option-hover-bg-color)}.ux-select-group__elem:not(.-disabled).-selected{font-weight:700;background-color:var(--uxs-option-select-bg-color)}.ux-select:not(.-multiple) .ux-select-group__elem:not(.-disabled).-selected{cursor:default}`)),document.head.appendChild(e)}}catch(r){console.error("vite-plugin-css-injected-by-js",r)}})();
var M = Object.defineProperty;
var R = (c, e, t) => e in c ? M(c, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : c[e] = t;
var f = (c, e, t) => (R(c, typeof e != "symbol" ? e + "" : e, t), t), q = (c, e, t) => {
  if (!e.has(c))
    throw TypeError("Cannot " + t);
};
var l = (c, e, t) => (q(c, e, "read from private field"), t ? t.call(c) : e.get(c)), d = (c, e, t) => {
  if (e.has(c))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(c) : e.set(c, t);
}, T = (c, e, t, s) => (q(c, e, "write to private field"), s ? s.call(c, t) : e.set(c, t), t);
var n = (c, e, t) => (q(c, e, "access private method"), t);
function k(c) {
  const e = new Event("change");
  c.dispatchEvent(e);
}
function U(c) {
  const e = new Event("input");
  c.dispatchEvent(e);
}
var i, b, $, x, O, g, A, E, D, m, G, _, B, y, H, L, P, S, j, v, I, w, N, C, V;
class z {
  constructor(e, t) {
    d(this, b);
    d(this, x);
    d(this, g);
    d(this, E);
    d(this, m);
    d(this, _);
    d(this, y);
    d(this, L);
    d(this, S);
    d(this, v);
    d(this, w);
    d(this, C);
    f(this, "el");
    f(this, "config");
    f(this, "text");
    f(this, "state");
    f(this, "options");
    f(this, "groups");
    d(this, i, void 0);
    this.el = e, this.config = t || {
      isSearchable: !1,
      isGroupOptions: !1
    }, this.text = {
      placeholder: this.el.dataset.placeholder || this.config.placeholder || "Select an option",
      searchText: this.el.dataset.searchText || this.config.searchText || "Search",
      clearText: this.el.dataset.clearText || this.config.clearText || "Clear option(s)",
      selectedText: this.el.dataset.selectedText || this.config.selectedText || "Selected:"
    }, this.state = {
      multiple: this.el.multiple,
      disabled: this.el.disabled
    }, this.options = [], this.groups = [], T(this, i, void 0), n(this, b, $).call(this);
  }
  disable() {
    !this.state.disabled && l(this, i) && (this.el.disabled = !0, l(this, i).classList.add("-disabled"), this.state.disabled = !0);
  }
  enable() {
    this.state.disabled && l(this, i) && (this.el.disabled = !1, l(this, i).classList.remove("-disabled"), this.state.disabled = !1);
  }
  update(e = !0) {
    n(this, x, O).call(this), n(this, m, G).call(this), this.el.disabled ? this.disable() : this.enable(), e && k(this.el);
  }
  clear() {
    this.options.forEach((e) => {
      if (e.attributes.selected && l(this, i)) {
        e.attributes.selected = !1;
        const t = l(this, i).querySelector(`[data-value="${e.data.value}"]`);
        t && t.classList.remove("-selected"), e.element.removeAttribute("selected");
      }
    }), n(this, g, A).call(this), k(this.el);
  }
  destroy() {
    l(this, i) && (l(this, i).remove(), this.el.style.display = "");
  }
}
i = new WeakMap(), b = new WeakSet(), $ = function() {
  n(this, x, O).call(this), n(this, _, B).call(this), n(this, C, V).call(this);
}, x = new WeakSet(), O = function() {
  const e = this.el.options;
  if (e.length <= 0)
    throw Error(`Null options at ${this.el}`);
  this.options = [];
  for (const t of e) {
    let s;
    this.config.isGroupOptions ? s = t.dataset.uxSelectGroup ? t.dataset.uxSelectGroup : "empty" : s = "empty", this.groups.indexOf(s) === -1 && this.groups.push(s), this.options.push({
      attributes: {
        selected: t.getAttribute("selected") !== null,
        disabled: t.disabled,
        group: s
      },
      data: {
        text: t.textContent || "",
        value: t.value
      },
      element: t
    });
  }
}, g = new WeakSet(), A = function(e = []) {
  if (l(this, i)) {
    const t = l(this, i).querySelector(".ux-select__title");
    if (!t)
      throw Error("selectTitle is null");
    e.length === 1 ? (t.textContent = e[0], l(this, i).classList.add("-filled")) : e.length > 0 && this.state.multiple ? (t.textContent = `${this.text.selectedText} ${e.length}`, l(this, i).classList.add("-filled")) : (t.textContent = this.text.placeholder, l(this, i).classList.remove("-filled"));
  }
}, E = new WeakSet(), D = function() {
  new Promise((e) => {
    const t = [];
    this.options.forEach((s) => {
      const a = document.createElement("li");
      if (a.classList.add("ux-select-group__elem"), a.dataset.value = s.data.value, a.textContent = s.data.text, s.attributes.selected && (a.classList.add("-selected"), t.push(s.data.text !== null ? s.data.text : "")), s.attributes.disabled && a.classList.add("-disabled"), a.addEventListener("click", n(this, v, I).bind(this)), l(this, i)) {
        const r = l(this, i).querySelector(
          `[data-ux-group="${s.attributes.group}"] .ux-select-group__list`
        );
        r && r.appendChild(a);
      }
    }), n(this, g, A).call(this, t), this.config.isGroupOptions ? e(!0) : e(!1);
  }).then((e) => {
    if (e && l(this, i)) {
      const t = l(this, i).querySelectorAll(".ux-select-group");
      t.length > 0 && t.forEach((s) => {
        const a = s.querySelector(".ux-select-group__list");
        if (a) {
          const r = a.querySelectorAll(".ux-select-group__elem"), o = a.querySelectorAll(".ux-select-group__elem.-disabled");
          r.length === o.length ? s.classList.add("-disabled") : s.classList.remove("-disabled");
        }
      });
    }
  });
}, m = new WeakSet(), G = function() {
  if (l(this, i)) {
    const e = l(this, i).querySelector(".ux-select__dropdown");
    if (!e)
      throw Error("uxSelectList is null");
    e.innerHTML = "", this.groups.forEach((t) => {
      const s = document.createElement("div");
      if (s.classList.add("ux-select__group", "ux-select-group"), t === "empty" && s.classList.add("-empty"), s.dataset.uxGroup = t, t !== "empty") {
        const r = document.createElement("div");
        r.classList.add("ux-select-group__title"), r.textContent = t, s.appendChild(r);
      }
      const a = document.createElement("ul");
      a.classList.add("ux-select-group__list"), s.appendChild(a), e.appendChild(s);
    }), n(this, E, D).call(this);
  }
}, _ = new WeakSet(), B = function() {
  this.el.style.display = "none";
  const e = document.createElement("div");
  e.classList.add("ux-select__head");
  const t = document.createElement("div");
  t.classList.add("ux-select__title"), t.textContent = this.text.placeholder;
  const s = document.createElement("button");
  s.type = "button", s.classList.add("ux-select__clear"), s.title = this.text.clearText, e.append(t, s);
  const a = document.createElement("div");
  if (a.classList.add("ux-select__body"), this.config.isSearchable) {
    const u = document.createElement("div");
    u.classList.add("ux-select__search");
    const p = document.createElement("input");
    p.type = "search", p.classList.add("ux-select-search__input"), p.placeholder = this.text.searchText, u.appendChild(p), a.appendChild(u);
  }
  const r = document.createElement("div");
  r.classList.add("ux-select__dropdown"), a.appendChild(r);
  const o = document.createElement("div"), h = ["ux-select", this.el.classList];
  this.state.multiple && h.push("-multiple"), this.state.disabled && h.push("-disabled"), o.className = h.join(" "), o.append(e, a), this.el.insertAdjacentElement("afterend", o), this.el.nextElementSibling && T(this, i, this.el.nextElementSibling), n(this, m, G).call(this);
}, y = new WeakSet(), H = function(e) {
  e.preventDefault();
  const t = e.target;
  if (this.state.disabled)
    return;
  if (!l(this, i))
    throw Error("uxEl is null");
  const s = l(this, i).querySelector(".ux-select__body");
  if (!s)
    throw Error("uxSelectBody is null");
  if (e.target !== l(this, i).querySelector(".ux-select__clear") && !s.contains(t)) {
    if (l(this, i).classList.contains("-shown"))
      l(this, i).classList.remove("-shown");
    else if (l(this, i).classList.add("-shown"), this.config.isSearchable) {
      const a = l(this, i).querySelector(".ux-select-search__input");
      if (!a)
        throw Error("Search input is null");
      a.value = "", a.dispatchEvent(new Event("input")), a.focus();
    }
  }
}, L = new WeakSet(), P = function(e) {
  const t = e.target;
  if (!l(this, i))
    throw Error("uxEl is null");
  l(this, i).contains(t) || l(this, i).classList.remove("-shown");
}, S = new WeakSet(), j = function(e) {
  return e.preventDefault(), this.state.disabled ? !1 : this.clear();
}, v = new WeakSet(), I = function(e) {
  if (e.preventDefault(), e.target !== null) {
    const t = e.target;
    if (t.classList.contains("-disabled"))
      return !1;
    if (this.state.multiple) {
      e.stopPropagation();
      const s = this.el.querySelector(`[value="${t.dataset.value}"]`);
      if (!s)
        throw Error("Option equal this value not found");
      t.classList.contains("-selected") ? s.removeAttribute("selected") : s.setAttribute("selected", "");
    } else if (!t.classList.contains("-selected"))
      this.el.querySelectorAll("option").forEach((s) => {
        s.value === t.dataset.value ? s.setAttribute("selected", "") : s.removeAttribute("selected");
      });
    else
      return !1;
    return this.update();
  }
}, w = new WeakSet(), N = function(e) {
  if (e.target !== null && l(this, i)) {
    const t = e.target, s = t.value.toLowerCase(), a = l(this, i).querySelectorAll(".ux-select-group");
    if (s === "")
      l(this, i).querySelectorAll(".ux-select-group__elem").forEach((o) => o.style.display = ""), this.config.isGroupOptions && a.forEach((o) => o.style.display = "");
    else {
      const r = new RegExp(s);
      new Promise((o) => {
        this.options.forEach((h) => {
          if (!l(this, i))
            throw Error("uxEl is null");
          const u = r.test(h.data.text.toLowerCase()), p = l(this, i).querySelector(`[data-value="${h.data.value}"]`);
          if (!p)
            throw Error("uxOption is null");
          p.style.display = u ? "" : "none";
        }), this.config.isGroupOptions ? o(!0) : o(!1);
      }).then((o) => {
        o && a.forEach((h) => {
          const u = h.querySelector(".ux-select-group__list");
          h.style.display = "", u && (h.style.display = u.clientHeight !== 0 ? "" : "none");
        });
      });
    }
    U(this.el);
  }
}, C = new WeakSet(), V = function() {
  if (l(this, i)) {
    l(this, i).addEventListener("click", n(this, y, H).bind(this));
    const e = l(this, i).querySelector(".ux-select__clear");
    if (e && e.addEventListener("click", n(this, S, j).bind(this)), window.addEventListener("click", n(this, L, P).bind(this)), this.config.isSearchable) {
      const t = l(this, i).querySelector(".ux-select-search__input");
      t && t.addEventListener("input", n(this, w, N).bind(this));
    }
  }
};
export {
  z as default
};
