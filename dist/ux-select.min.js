(function(){"use strict";try{if(typeof document<"u"){var e=document.createElement("style");e.appendChild(document.createTextNode(`:root{--uxs-padding-x: 12px;--uxs-padding-y: 6px;--uxs-background-color: rgb(255, 255, 255);--uxs-text-color: rgb(34, 34, 34);--uxs-font-size: 16px;--uxs-line-height: 1.5;--uxs-border-width: 1px;--uxs-border-radius: 6px;--uxs-border-color: rgb(233, 233, 233);--uxs-border-hover-color: rgb(189, 193, 198);--uxs-option-hover-bg-color: rgb(244, 244, 244);--uxs-option-select-bg-color: rgb(233, 233, 233);--uxs-option-disable-color: rgb(130, 130, 130);--uxs-option-styled-outline-width: 1px;--uxs-option-styled-checkbox-outline-radius: 4px;--uxs-option-styled-border-width: 3px;--uxs-option-styled-bg: rgb(0, 224, 255);--uxs-dropdown-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M12,16c-0.3,0-0.5-0.1-0.7-0.3l-6-6c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4 l-6,6C12.5,15.9,12.3,16,12,16z'/%3E%3C/g%3E%3C/svg%3E%0A");--uxs-dropdown-image-disable: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cg%3E%3Cpath fill='rgb(130 130 130)' d='M12,16c-0.3,0-0.5-0.1-0.7-0.3l-6-6c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l5.3,5.3l5.3-5.3c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4 l-6,6C12.5,15.9,12.3,16,12,16z'/%3E%3C/g%3E%3C/svg%3E%0A");--uxs-clear-image: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M6,19c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l12-12c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-12,12C6.5,18.9,6.3,19,6,19z' /%3E%3Cpath d='M18,19c-0.3,0-0.5-0.1-0.7-0.3l-12-12c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l12,12c0.4,0.4,0.4,1,0,1.4 C18.5,18.9,18.3,19,18,19z'/%3E%3C/g%3E%3C/svg%3E%0A");--uxs-clear-image-disable: url("data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 24 24' style='enable-background:new 0 0 24 24;' xml:space='preserve'%3E%3Cg%3E%3Cpath fill='rgb(130 130 130)' d='M6,19c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l12-12c0.4-0.4,1-0.4,1.4,0s0.4,1,0,1.4l-12,12C6.5,18.9,6.3,19,6,19z' /%3E%3Cpath fill='rgb(130 130 130)' d='M18,19c-0.3,0-0.5-0.1-0.7-0.3l-12-12c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0l12,12c0.4,0.4,0.4,1,0,1.4 C18.5,18.9,18.3,19,18,19z'/%3E%3C/g%3E%3C/svg%3E%0A");--uxs-search-bg: rgb(255, 255, 255);--uxs-search-color: rgb(34, 34, 34);--uxs-search-placeholder: rgb(169, 169, 169);--uxs-transition-duration: .2s;--uxs-transition-easing: ease-in-out;--uxs-scrollbar-track-color: rgb(189, 189, 189);--uxs-scrollbar-thumb-color: rgb(117, 117, 117);--uxs-scrollbar-thumb-hover-color: rgb(97, 97, 97)}.ux-select{cursor:pointer;position:relative;display:block;width:100%;margin:0;padding:var(--uxs-padding-y) var(--uxs-padding-x);border:var(--uxs-border-width) solid var(--uxs-border-color);border-radius:var(--uxs-border-radius);background-color:var(--uxs-background-color);font-size:var(--uxs-font-size);line-height:var(--uxs-line-height);color:var(--uxs-text-color);transition:border-color var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select.-disabled{cursor:not-allowed;color:var(--uxs-option-disable-color)}.ux-select.-filled .ux-select__clear{display:block}.ux-select:not(.-disabled).-focus{border-color:var(--uxs-border-hover-color)}.ux-select:not(.-disabled).-shown{border-color:var(--uxs-border-hover-color)}.ux-select:not(.-disabled).-shown .ux-select__head:after{transform:rotate(-180deg)}.ux-select:not(.-disabled).-shown .ux-select__body{pointer-events:auto;opacity:1;transform:scale(1) translateY(0)}.ux-select__head{position:relative;display:flex;align-items:center}.ux-select__head:after{content:"";display:flex;align-items:center;justify-content:center;min-width:16px;width:16px;height:16px;margin-left:8px;background:transparent var(--uxs-dropdown-image) center no-repeat;transition:transform var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select.-disabled .ux-select__head:after{background-image:var(--uxs-dropdown-image-disable)}.ux-select__title{user-select:none;flex-grow:1;white-space:nowrap}.ux-select__clear{cursor:pointer;display:none;min-width:16px;width:16px;height:16px;margin-left:8px;border:none;outline:none;background:transparent var(--uxs-clear-image) center no-repeat}.ux-select.-disabled .ux-select__clear{cursor:not-allowed;background-image:var(--uxs-clear-image-disable)}.ux-select__body{pointer-events:none;position:absolute;z-index:5;top:calc(100% + 5px);left:0;overflow:hidden;width:100%;border:var(--uxs-border-width) solid var(--uxs-border-color);border-radius:var(--uxs-border-radius);background-color:var(--uxs-background-color);opacity:0;transform:scale(.75) translateY(-12px);transition:opacity var(--uxs-transition-duration) var(--uxs-transition-easing),transform var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select__search{padding:4px}.ux-select-search__input{width:100%;padding:var(--uxs-padding-y) calc(var(--uxs-padding-x) - 3px);border:var(--uxs-border-width) solid var(--uxs-border-color);border-radius:var(--uxs-border-radius);background-color:var(--uxs-search-bg);color:var(--uxs-search-color);transition:border-color var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select-search__input::placeholder{color:var(--uxs-search-placeholder)}.ux-select-search__input::-ms-clear,.ux-select-search__input::-ms-reveal{display:none;width:0;height:0}.ux-select-search__input::-webkit-search-decoration,.ux-select-search__input::-webkit-search-cancel-button,.ux-select-search__input::-webkit-search-results-button,.ux-select-search__input::-webkit-search-results-decoration{-webkit-appearance:none;appearance:none}.ux-select-search__input:focus-visible{outline:none}.ux-select-search__input:focus{border-color:var(--uxs-border-hover-color)}.ux-select__dropdown{max-height:calc((var(--uxs-font-size) * var(--uxs-line-height) + var(--uxs-padding-y) * 2) * 5);overflow-y:auto;scroll-behavior:smooth;scrollbar-width:thin;scrollbar-color:var(--uxs-scrollbar-track-color) var(--uxs-scrollbar-thumb-color)}.ux-select__dropdown::-webkit-scrollbar{position:absolute;width:7px;height:7px}.ux-select__dropdown::-webkit-scrollbar-track{background-color:var(--uxs-scrollbar-track-color)}.ux-select__dropdown::-webkit-scrollbar-thumb{background-color:var(--uxs-scrollbar-thumb-color)}.ux-select__dropdown::-webkit-scrollbar-thumb:hover{background-color:var(--uxs-scrollbar-thumb-hover-color)}.ux-select-group.-disabled .ux-select-group__title{color:var(--uxs-option-disable-color)}.ux-select-group.-empty .ux-select-group__elem{padding:var(--uxs-padding-y) var(--uxs-padding-x)}.ux-select-group__title{cursor:default;padding:var(--uxs-padding-y) var(--uxs-padding-x);font-weight:700}.ux-select-group__list{margin:0;padding:0;list-style:none}.ux-select-group__elem{user-select:none;padding:var(--uxs-padding-y) var(--uxs-padding-x) var(--uxs-padding-y) calc(var(--uxs-padding-x) * 2);background-color:var(--uxs-background-color);transition:background-color var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select.-radio .ux-select-group__elem,.ux-select.-checkbox .ux-select-group__elem{display:flex;align-items:center;justify-content:space-between}.ux-select.-radio .ux-select-group__elem:after,.ux-select.-checkbox .ux-select-group__elem:after{content:"";display:flex;align-items:center;justify-content:center;width:var(--uxs-font-size);height:var(--uxs-font-size);outline:var(--uxs-option-styled-outline-width) solid var(--uxs-option-styled-bg);border:var(--uxs-option-styled-border-width) solid var(--uxs-background-color);transition:background-color var(--uxs-transition-duration) var(--uxs-transition-easing)}.ux-select.-radio .ux-select-group__elem:after{border-radius:50%}.ux-select.-checkbox .ux-select-group__elem:after{border-radius:var(--uxs-option-styled-checkbox-outline-radius)}.ux-select-group__elem.-disabled{cursor:not-allowed;color:var(--uxs-option-disable-color)}.ux-select-group__elem:not(.-disabled):hover{background-color:var(--uxs-option-hover-bg-color)}.ux-select.-radio .ux-select-group__elem:not(.-disabled):hover:after,.ux-select.-checkbox .ux-select-group__elem:not(.-disabled):hover:after{border:var(--uxs-option-styled-border-width) solid var(--uxs-option-hover-bg-color)}.ux-select-group__elem:not(.-disabled).-selected{font-weight:700;background-color:var(--uxs-option-select-bg-color)}.ux-select:not(.-multiple) .ux-select-group__elem:not(.-disabled).-selected{cursor:default}.ux-select.-radio .ux-select-group__elem.-selected:after,.ux-select.-checkbox .ux-select-group__elem.-selected:after{border:var(--uxs-option-styled-border-width) solid var(--uxs-option-hover-bg-color);background-color:var(--uxs-option-styled-bg)}`)),document.head.appendChild(e)}}catch(r){console.error("vite-plugin-css-injected-by-js",r)}})();
var V = Object.defineProperty;
var M = (c, e, t) => e in c ? V(c, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : c[e] = t;
var x = (c, e, t) => (M(c, typeof e != "symbol" ? e + "" : e, t), t), O = (c, e, t) => {
  if (!e.has(c))
    throw TypeError("Cannot " + t);
};
var s = (c, e, t) => (O(c, e, "read from private field"), t ? t.call(c) : e.get(c)), n = (c, e, t) => {
  if (e.has(c))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(c) : e.set(c, t);
}, b = (c, e, t, i) => (O(c, e, "write to private field"), i ? i.call(c, t) : e.set(c, t), t);
var o = (c, e, t) => (O(c, e, "access private method"), t);
function k(c) {
  const e = new Event("change");
  c.dispatchEvent(e);
}
function R(c) {
  const e = new Event("input");
  c.dispatchEvent(e);
}
var h, l, E, z, g, G, m, A, y, D, S, $, _, B, L, F, v, H, w, P, C, j, T, I, q, N;
class W {
  /**
   * @param {HTMLSelectElement} element Select element
   * @param {Object} [options] Props
   * @param {Boolean} [options.isSearchable] Set true to add search input
   * @param {Boolean} [options.isSearchFocus] Set false to remove focus on search input
   * @param {Boolean} [options.isGroupOption] Set true to add grouping options
   * @param {(checkbox|radio|default)} [options.optionStyle] Add styles link option(s) it checkbox or radio
   * @param {String} [options.placeholder] Change placeholder text
   * @param {String} [options.searchText] Change placeholder text on search input
   * @param {String} [options.clearText] Change title on x-mark icon
   * @param {String} [options.selectedText] Change text on multiple select, when user select more than 1 option
   * */
  constructor(e, t) {
    n(this, E);
    n(this, g);
    n(this, m);
    n(this, y);
    n(this, S);
    n(this, _);
    n(this, L);
    n(this, v);
    n(this, w);
    n(this, C);
    n(this, T);
    n(this, q);
    x(this, "el");
    n(this, h, void 0);
    x(this, "config");
    x(this, "localization");
    x(this, "state");
    x(this, "options");
    x(this, "groups");
    n(this, l, void 0);
    this.el = e, b(this, h, t || {
      isSearchable: !1,
      isSearchFocus: !1,
      isGroupOptions: !1,
      optionStyle: "default",
      placeholder: "Select an option",
      searchText: "Search",
      clearText: "Clear option(s)",
      selectedText: "Selected:"
    }), this.config = {
      isSearchable: s(this, h).isSearchable || !1,
      isSearchFocus: s(this, h).isSearchFocus || !1,
      isGroupOptions: s(this, h).isGroupOptions || !1,
      optionStyle: s(this, h).optionStyle || "default"
    }, this.localization = {
      placeholder: s(this, h).placeholder || this.el.dataset.placeholder || "Select an option",
      searchText: s(this, h).searchText || this.el.dataset.searchText || "Search",
      clearText: s(this, h).clearText || this.el.dataset.clearText || "Clear option(s)",
      selectedText: s(this, h).selectedText || this.el.dataset.selectedText || "Selected:"
    }, this.state = {
      multiple: this.el.multiple,
      disabled: this.el.disabled
    }, this.options = [], this.groups = [], b(this, l, void 0), o(this, E, z).call(this);
  }
  disable() {
    !this.state.disabled && s(this, l) && (this.el.disabled = !0, s(this, l).classList.add("-disabled"), this.state.disabled = !0);
  }
  enable() {
    this.state.disabled && s(this, l) && (this.el.disabled = !1, s(this, l).classList.remove("-disabled"), this.state.disabled = !1);
  }
  /**
   *
   * @param {Boolean} [isTriggerChange] Skip triggering "change" event
   */
  update(e = !0) {
    o(this, g, G).call(this), o(this, S, $).call(this), this.el.disabled ? this.disable() : this.enable(), e && k(this.el);
  }
  clear() {
    this.options.forEach((e) => {
      if (e.attributes.selected && s(this, l)) {
        e.attributes.selected = !1;
        const t = s(this, l).querySelector(`[data-value="${e.data.value}"]`);
        t && t.classList.remove("-selected"), e.element.removeAttribute("selected");
      }
    }), o(this, m, A).call(this), k(this.el);
  }
  destroy() {
    s(this, l) && (s(this, l).remove(), this.el.style.display = "");
  }
}
h = new WeakMap(), l = new WeakMap(), E = new WeakSet(), z = function() {
  o(this, g, G).call(this), o(this, _, B).call(this), o(this, q, N).call(this);
}, g = new WeakSet(), G = function() {
  const e = this.el.options;
  if (e.length <= 0)
    throw Error(`Null options at ${this.el}`);
  this.options = [];
  for (const t of e) {
    let i;
    this.config.isGroupOptions ? i = t.dataset.uxSelectGroup ? t.dataset.uxSelectGroup : "empty" : i = "empty", this.groups.indexOf(i) === -1 && this.groups.push(i), this.options.push({
      attributes: {
        selected: t.getAttribute("selected") !== null,
        disabled: t.disabled,
        group: i
      },
      data: {
        text: t.textContent || "",
        value: t.value
      },
      element: t
    });
  }
}, m = new WeakSet(), A = function(e = []) {
  if (s(this, l)) {
    const t = s(this, l).querySelector(".ux-select__title");
    if (!t)
      throw Error("selectTitle is null");
    e.length === 1 ? (t.textContent = e[0], s(this, l).classList.add("-filled")) : e.length > 0 && this.state.multiple ? (t.textContent = `${this.localization.selectedText} ${e.length}`, s(this, l).classList.add("-filled")) : (t.textContent = this.localization.placeholder, s(this, l).classList.remove("-filled"));
  }
}, y = new WeakSet(), D = function() {
  new Promise((e) => {
    const t = [];
    this.options.forEach((i) => {
      const a = document.createElement("li");
      if (a.classList.add("ux-select-group__elem"), a.dataset.value = i.data.value, a.textContent = i.data.text, i.attributes.selected && (a.classList.add("-selected"), t.push(i.data.text !== null ? i.data.text : "")), i.attributes.disabled && a.classList.add("-disabled"), a.addEventListener("click", o(this, C, j).bind(this)), s(this, l)) {
        const r = s(this, l).querySelector(
          `[data-ux-group="${i.attributes.group}"] .ux-select-group__list`
        );
        r && r.appendChild(a);
      }
    }), o(this, m, A).call(this, t), this.config.isGroupOptions ? e(!0) : e(!1);
  }).then((e) => {
    if (e && s(this, l)) {
      const t = s(this, l).querySelectorAll(".ux-select-group");
      t.length > 0 && t.forEach((i) => {
        const a = i.querySelector(".ux-select-group__list");
        if (a) {
          const r = a.querySelectorAll(".ux-select-group__elem"), d = a.querySelectorAll(".ux-select-group__elem.-disabled");
          r.length === d.length ? i.classList.add("-disabled") : i.classList.remove("-disabled");
        }
      });
    }
  });
}, S = new WeakSet(), $ = function() {
  if (s(this, l)) {
    const e = s(this, l).querySelector(".ux-select__dropdown");
    if (!e)
      throw Error("uxSelectList is null");
    e.innerHTML = "", this.groups.forEach((t) => {
      const i = document.createElement("div");
      if (i.classList.add("ux-select__group", "ux-select-group"), t === "empty" && i.classList.add("-empty"), i.dataset.uxGroup = t, t !== "empty") {
        const r = document.createElement("div");
        r.classList.add("ux-select-group__title"), r.textContent = t, i.appendChild(r);
      }
      const a = document.createElement("ul");
      a.classList.add("ux-select-group__list"), i.appendChild(a), e.appendChild(i);
    }), o(this, y, D).call(this);
  }
}, _ = new WeakSet(), B = function() {
  this.el.style.display = "none";
  const e = document.createElement("div");
  e.classList.add("ux-select__head");
  const t = document.createElement("div");
  t.classList.add("ux-select__title"), t.textContent = this.localization.placeholder;
  const i = document.createElement("button");
  i.type = "button", i.classList.add("ux-select__clear"), i.title = this.localization.clearText, e.append(t, i);
  const a = document.createElement("div");
  if (a.classList.add("ux-select__body"), this.config.isSearchable) {
    const p = document.createElement("div");
    p.classList.add("ux-select__search");
    const f = document.createElement("input");
    f.type = "search", f.classList.add("ux-select-search__input"), f.placeholder = this.localization.searchText, p.appendChild(f), a.appendChild(p);
  }
  const r = document.createElement("div");
  r.classList.add("ux-select__dropdown"), a.appendChild(r);
  const d = document.createElement("div"), u = ["ux-select", this.el.classList];
  this.state.multiple && u.push("-multiple"), this.state.disabled && u.push("-disabled"), this.config.optionStyle !== "default" && u.push(`-${this.config.optionStyle}`), d.className = u.join(" "), d.append(e, a), this.el.insertAdjacentElement("afterend", d), this.el.nextElementSibling && b(this, l, this.el.nextElementSibling), o(this, S, $).call(this);
}, L = new WeakSet(), F = function(e) {
  e.preventDefault();
  const t = e.target;
  if (this.state.disabled)
    return;
  if (!s(this, l))
    throw Error("uxEl is null");
  const i = s(this, l).querySelector(".ux-select__body");
  if (!i)
    throw Error("uxSelectBody is null");
  if (e.target !== s(this, l).querySelector(".ux-select__clear") && !i.contains(t)) {
    if (s(this, l).classList.contains("-shown"))
      s(this, l).classList.remove("-shown");
    else if (s(this, l).classList.add("-shown"), this.config.isSearchable) {
      const a = s(this, l).querySelector(".ux-select-search__input");
      if (!a)
        throw Error("Search input is null");
      a.value = "", a.dispatchEvent(new Event("input")), this.config.isSearchFocus && a.focus();
    }
  }
}, v = new WeakSet(), H = function(e) {
  const t = e.target;
  if (!s(this, l))
    throw Error("uxEl is null");
  s(this, l).contains(t) || s(this, l).classList.remove("-shown");
}, w = new WeakSet(), P = function(e) {
  return e.preventDefault(), this.state.disabled ? !1 : this.clear();
}, C = new WeakSet(), j = function(e) {
  if (e.preventDefault(), e.target !== null) {
    const t = e.target;
    if (t.classList.contains("-disabled"))
      return !1;
    if (this.state.multiple) {
      e.stopPropagation();
      const i = this.el.querySelector(`[value="${t.dataset.value}"]`);
      if (!i)
        throw Error("Option equal this value not found");
      t.classList.contains("-selected") ? i.removeAttribute("selected") : i.setAttribute("selected", "");
    } else if (!t.classList.contains("-selected"))
      this.el.querySelectorAll("option").forEach((i) => {
        i.value === t.dataset.value ? i.setAttribute("selected", "") : i.removeAttribute("selected");
      });
    else
      return !1;
    return this.update();
  }
}, T = new WeakSet(), I = function(e) {
  if (e.target !== null && s(this, l)) {
    const t = e.target, i = t.value.toLowerCase(), a = s(this, l).querySelectorAll(".ux-select-group");
    if (i === "")
      s(this, l).querySelectorAll(".ux-select-group__elem").forEach((d) => d.style.display = ""), this.config.isGroupOptions && a.forEach((d) => d.style.display = "");
    else {
      const r = new RegExp(i);
      new Promise((d) => {
        this.options.forEach((u) => {
          if (!s(this, l))
            throw Error("uxEl is null");
          const p = r.test(u.data.text.toLowerCase()), f = s(this, l).querySelector(`[data-value="${u.data.value}"]`);
          if (!f)
            throw Error("uxOption is null");
          f.style.display = p ? "" : "none";
        }), this.config.isGroupOptions ? d(!0) : d(!1);
      }).then((d) => {
        d && a.forEach((u) => {
          const p = u.querySelector(".ux-select-group__list");
          u.style.display = "", p && (u.style.display = p.clientHeight !== 0 ? "" : "none");
        });
      });
    }
    R(this.el);
  }
}, q = new WeakSet(), N = function() {
  if (s(this, l)) {
    s(this, l).addEventListener("click", o(this, L, F).bind(this));
    const e = s(this, l).querySelector(".ux-select__clear");
    if (e && e.addEventListener("click", o(this, w, P).bind(this)), window.addEventListener("click", o(this, v, H).bind(this)), this.config.isSearchable) {
      const t = s(this, l).querySelector(".ux-select-search__input");
      t && t.addEventListener("input", o(this, T, I).bind(this));
    }
  }
};
export {
  W as default
};
